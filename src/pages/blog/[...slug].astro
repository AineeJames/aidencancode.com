---
import { render } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import ViewCount from "../../components/ViewCount.astro";
import dayjs from "dayjs";
import TableOfContents from "../../components/TableOfContents.astro";
import Giscus from "../../components/Giscus.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import TextSkeleton from "../../components/TextSkeleton.astro";
import Avatar from "../../components/Avatar.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.id },
    props: { post }
  }));
}

const { post } = Astro.props;
const { slug } = Astro.params;
const { Content, headings, remarkPluginFrontmatter } = await render(post);

const pubDateFormat = dayjs(post.data.pubDate)
  .format("DD MMM YYYY")
---

<BlogPost title={post.data.title}>
  <div slot="header">
    <h1 class="text-5xl font-extrabold mb-5 text-accent">{post.data.title}</h1>
    <div class="flex justify-between text-sm text-dim mb-5 items-center">
      <div class="flex items-center gap-2">
        <Avatar size={20}/>
        <p>{post.data.author} / {pubDateFormat}</p>
      </div>
      <div class="flex gap-[0.5ch]">
        <p>{remarkPluginFrontmatter.minutesRead} &mdash;</p>
        <div class="flex items-center gap-1 bg-zinc-800 px-1 rounded-sm">
          <Icon name="lucide:eye"/>
          <ViewCount postSlug={slug} increment server:defer class="font-mono">
            <TextSkeleton slot="fallback"/>
          </ViewCount> 
        </div>
      </div>
    </div>
  </div>

  <Content slot="content"/>

  <TableOfContents {headings} slot="sidebar" />

  <Giscus slot="footer"/>
</BlogPost>
